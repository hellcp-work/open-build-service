.row
  .col-md-12
    .d-flex.justify-content-between.mb-4
      #description-text
        - if bs_request.description.present?
          = render partial: 'webui/shared/collapsible_text', locals: { text: bs_request.description }
        - else
          %i No description set
.row
  = render partial: 'webui/request/beta_show_tabs/conversation_aside',
           locals: { bs_request: bs_request,
             can_add_reviews: can_add_reviews,
             my_open_reviews: my_open_reviews,
             request_reviews: request_reviews,
             open_reviews_for_staging_projects: open_reviews_for_staging_projects,
             package_maintainers: package_maintainers,
             project_maintainers: project_maintainers,
             show_project_maintainer_hint: show_project_maintainer_hint }

  .col-md-8.order-md-1.order-sm-2#comments-list
    %h4.list-group.mb-4 Comments & Request History
    .timeline{ data: { comment_counter: local_assigns[:comment_counter_id] } }
      .timeline-item
        .d-inline-flex
          - creator = User.find_by_login(bs_request.creator) || User.nobody
          = image_tag_for(creator, size: 35, custom_class: 'rounded-circle bg-light border border-gray-400 avatars-counter')
          %p
            %i.fas.fa-code-commit.text-dark
            = link_to(realname_with_login(creator), user_path(creator))
            created this request
            = link_to('#request-creation', title: I18n.l(bs_request.created_at.utc), name: 'request-creation') do
              #{time_ago_in_words(bs_request.created_at)} ago
            - if bs_request.superseding.any?
              superseding
              - bs_request.superseding.each do |superseded_request|
                = link_to("request ##{superseded_request.number}", request_show_path(superseded_request.number, anchor: 'overview'))

      - bs_request.superseding.each do |superseding_request|
        .timeline-item.pb-4
          = link_to('#collapse-superseding', class: 'd-flex align-items-center',
              data: { 'bs-toggle': 'collapse' },
              aria: { expanded: false, controls: 'collapse-superseding' }) do
            %i.timeline-break.expander>
            %i.timeline-offset.collapser>

            %i.fas.fa-fw.fa-chevron-right.expander.me-1{ title: 'Show history' }>
            %i.fas.fa-fw.fa-chevron-down.collapser.me-1{ title: 'Hide history' }>
            %span.expander
              Expand history from superseded request ##{superseding_request.number}
            %span.collapser
              Collapse history from superseded request ##{superseding_request.number}
        .collapse.mb-4#collapse-superseding
          = render BsRequestActivityTimelineComponent.new(bs_request: superseding_request)

      = render BsRequestActivityTimelineComponent.new(bs_request: bs_request)

    .comment_new.mt-3
      = render partial: 'webui/comment/new', locals: { commentable: bs_request }
    %hr

    - if bs_request.accept_at.present?
      .alert.alert-warning.p-2.mb-3
        %i.fas.fa-exclamation-triangle
        %span The current request
        - if BsRequest::FINAL_REQUEST_STATES.include?(bs_request.state)
          %span
            was
            %strong auto-accepted
            at
            %span.fuzzy-time{ title: "#{I18n.l bs_request.accept_at}" }
            = succeed '.' do
              = I18n.l bs_request.accept_at, format: :only_date
        - elsif bs_request.accept_at.past?
          %span
            will be
            %strong auto-accepted
            after all the reviews are submitted.
        - else
          will be
          %strong auto-accepted
          in #{time_ago_in_words(bs_request.accept_at)}.
    = render RequestDecisionComponent.new(bs_request: bs_request, action: action,
                                          is_target_maintainer: is_target_maintainer,
                                          is_author: is_author)
